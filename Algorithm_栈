1.参考
1.1.http://fanqieto.top/2018/09/04/LeetCode-%E6%A0%88%E7%B1%BB%E7%AE%97%E6%B3%95%E7%B2%BE%E6%9E%90/
1.2.https://blog.csdn.net/koudaidai/article/details/7571521
1.3.https://my.oschina.net/brianway/blog/1545142

2.实际问题
2.1.括号类
2.1.1.删除最外层的括号(leetcode [1021] Remove Outermost Parentheses)
  关键：判断栈是否为空找到最外层的括号位置；动态记录最外层括号包裹的子字符串
  代码：
  class Solution {
      public String removeOuterParentheses(String S) {
          StringBuilder ans = new StringBuilder("");
          Stack<Character> stack = new Stack<Character>();
          int start = 0;
          boolean flag = false;
          for (int i = 0; i < S.length(); ++i) {
              if (S.charAt(i) == '(') {
                  stack.push('(');
                  if (!flag) {
                      start = i;
                      flag = true;
                  } 
              } else {
                  char c = stack.pop();
                  if (stack.isEmpty()) {
                      ans.append(S.substring(start+1, i));
                      flag = false;
                  }
              }
          }
          return ans.toString();
      }
  }
